Возможности технологии Tomita-Parser
====================================

.Входные данные
----------
- Где обедал, воробей?
- В зоопарке у зверей.

Пообедал я сперва
За решеткою у льва.

Подкрепился у лисицы 14 августа.
1 сентября у моржа попил водицы.

Ел морковку у слона 29 декабря 2011 года.
С журавлем поел пшена.
----------

*Задача:* Вычленить из данного текста информацию о том, у кого и когда обедал воробей.

Для решения задачи будем использовать морфологический анализатор текста Tomita-Parser.

В первую очередь зададим формальные грамматики, позволяющие распознать дату в различных возможных её видах:

---------
#encoding "utf-8"

DayOfWeek -> Noun<kwtype="день_недели">;      // используем слова из статьи "день_недели"
Day -> AnyWord<wff=/([1-2]?[0-9])|(3[0-1])/>; // Регулярное выражение обозначающее число от 1 до 31
Month -> Noun<kwtype="месяц">;                // используем слова из статьи "месяц"
YearDescr -> "год" | "г. ";
Year -> AnyWord<wff=/[1-2]?[0-9]{1,3}г?\.?/>; // Регулярное выражение обозначающее число от 0 до 2999 с возможным "г" или "г." в конце
Year -> Year YearDescr;

        // день недели, запятая, число, месяц и год:
        // "понедельник, 3 сентября 2012г."
Date -> DayOfWeek interp (Date.DayOfWeek) (Comma)
        Day interp (Date.Day)
        Month interp (Date.Month)
        (Year interp (Date.Year));

        // число, месяц и год: "10 января 2011"
Date -> Day interp (Date.Day)
        Month interp (Date.Month)
        (Year interp (Date.Year));

        // месяц и год: "июнь 2009"
Date -> Month interp (Date.Month)
        Year interp (Date.Year);
---------

Здесь "день_недели" и "месяц" задаются отдельно простым перечислением возможных значений. Теперь в дальнейшем можно использовать ключевое слово Date для распознавания даты.

Следующим этапом зададим основные грамматики

-----------
Animal -> Noun<kwtype=animal>;
WithWho -> 'у' (Adj<gnc-agr[1]>) Animal<gram='род', rt, gnc-agr[1]> interp (Sparrow.Who);
WithWho -> 'с' (Adj<gnc-agr[1]>) Animal<gram='твор', rt, gnc-agr[1]> interp (Sparrow.Who);
// Раскрытие того, как может быть образовано выражение "Того, с кем обедал воробей".
S -> Date interp (Sparrow.When) WithWho; 
// Грамматика отмечающая выражение "Дата (обозначаемая Sparrow.When) и того, с кем обедал воробей".
S -> WithWho Date interp (Sparrow.When);
// Грамматика отмечающая выражение "Того, с кем обедал воробей и дату (обозначаемая Sparrow.When)".
-----------

Здесь animal так же как и "день_недели" или "месяц" задаются в отдельном месте.

После запуска парсера с приведёнными выше входными данными и заданными грамматиками получаем следующие выходные данные:

